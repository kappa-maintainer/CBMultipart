buildscript {
	repositories {
		jcenter()
		maven {
			name = "forge"
			url = "https://maven.minecraftforge.net/"
		}
	}
	dependencies {
		classpath("com.anatawa12.forge:ForgeGradle:2.3-1.0.+") {
			changing = true
		}
	}
}

apply plugin: 'scala'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'

group = "codechicken"
archivesBaseName = "ForgeMultipart"

targetCompatibility = "1.8"
sourceCompatibility = "1.8"

// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
	// Load config.  It shall from now be referenced as simply config or project.config
	def prop = new Properties()
	prop.load(it)
	project.ext.config = new ConfigSlurper().parse prop
}

configurations {
	pack
	compile {
		extendsFrom pack
	}
}

repositories {
	maven {
		name = "chickenbones"
		url = "https://chickenbones.net/maven"
	}
	maven {
		name = "JEI Maven."
		url = "https://dvs1.progwml6.com/files/maven"
	}
}

dependencies {
	compileOnly "codechicken:CodeChickenLib:${config.mc_version}-${config.ccl_version}:deobf"
	implementation "codechicken:ChickenASM:1.12-1.0.2.9"
	//jarJar "codechicken:ChickenASM:[1.12-1.0.2.9,2.0.0.10)"
	compileOnly "mezz.jei:jei_${config.mc_version}:${config.jei_version}"
}

version = "${project.config.mod_version}." + "85"

println config.mc_version + "-" + config.forge_version
// Setup the forge minecraft plugin data. Specify the preferred forge/minecraft version here
minecraft {
	version = config.mc_version + "-" + config.forge_version
	mappings = config.mappings
	runDir = "run"
	makeObfSourceJar = false
}

processResources {
	//redo task if any of these properties change
	inputs.property "version", project.version
	inputs.property "mc_version", config.mc_version
	inputs.property "ccl_version", config.ccl_version

	// Replace properties in info files
	from(sourceSets.main.resources.srcDirs) {
		include '*.info'
		expand 'version': project.version, 'mc_version': config.mc_version, 'ccl_version': config.ccl_version
	}
    rename '(.+_at.cfg)', 'META-INF/$1'
}

version = "${project.minecraft.version}-${project.version}"

def commonManifest = {
	attributes 'ContainedDeps': "ChickenASM-1.12-${config.cc_asm_version}.jar"
    attributes 'FMLAT': 'fmp_at.cfg'
}

jar {
	classifier = 'universal'
	manifest commonManifest
	from configurations.pack
}

task srcJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

task deobfJar(type: Jar) {
	classifier = 'deobf'
	manifest commonManifest
	from sourceSets.main.output
	from configurations.pack
}



tasks.withType(ScalaCompile) { scalaCompileOptions.additionalParameters = ["-Xexperimental"] }

// Tell the artifact system about our extra jars
artifacts {
	archives srcJar, deobfJar
}


